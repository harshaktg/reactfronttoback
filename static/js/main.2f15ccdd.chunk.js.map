{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/layout/Header.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","onEditClick","console","log","name","email","phone","showDetails","className","style","cursor","onClick","icon","faSortDown","color","float","e","faTimes","to","marginRight","faPen","defaultProps","Contacts","key","TextInputGroup","label","onChange","placeholder","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newState","post","history","push","EditContact","put","match","params","About","NotFound","Header","branding","faHome","faPlus","faQuestion","Test","title","body","componentDidMount","fetch","then","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f15ccdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      }\n    case 'EDIT_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => {\n          if (contact.id === action.payload.id) {\n            contact = action.payload;\n          }\n          return contact;\n        })\n      }\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [],\n      dispatch: action => {\n        return this.setState(state => reducer(state, action));\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get('http://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n};\n\nexport const Consumer = Context.Consumer; ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../../context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faTimes, faPen } from '@fortawesome/free-solid-svg-icons';\n\n// import './contact.css';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (payload, dispatch) => {\n    try {\n      await axios.delete(`http://jsonplaceholder.typicode.com/users/${payload}`);\n    } catch (e) {\n      throw e;\n    } finally {\n      dispatch({ type: 'DELETE_CONTACT', payload });\n    }\n\n  };\n\n  onEditClick = (id) => {\n    console.log(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    let showDetails = (<ul className='listgroup'>\n      <li className='list-group-item'>Email : {email}</li>\n      <li className='list-group-item'>Phone : {phone}</li>\n    </ul>);\n    showDetails = !this.state.showContactInfo ? null : showDetails;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className='card card-body mb-3'>\n              <h4>{name} <i style={{ cursor: 'pointer' }} onClick={this.onShowClick}><FontAwesomeIcon icon={faSortDown} /></i>\n                <i style={{ cursor: 'pointer', color: 'red', float: 'right' }} onClick={(e, payload = id, action = value.dispatch) => this.onDeleteClick(payload, action)}><FontAwesomeIcon icon={faTimes} /></i>\n                <Link to={`/contact/edit/${id}`}><i style={{ cursor: 'pointer', color: 'black', float: 'right', marginRight: '1rem' }}   ><FontAwesomeIcon icon={faPen} /></i></Link>\n              </h4>\n              {showDetails}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  };\n}\n\nContact.defaultProps = {\n  name: 'Your Name',\n  phone: '9876543210',\n  email: 'name@email.com'\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (<div>\n            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> list</h1>\n            {contacts.map(contact => {\n              return <Contact key={contact.id} contact={contact} />\n            })}\n          </div>);\n        }}\n      </Consumer>\n    )\n  };\n};\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = (props) => {\n  const { label, name, value, type, onChange, placeholder, error } = props;\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input type={type} className={classnames(\"form-control form-control-lg\", { 'is-invalid': error })} placeholder={placeholder} name={name} value={value} onChange={onChange} />\n        {error && <div className=\"invalid-feedback\">\n          {error}\n        </div>}\n      </div>\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (e, dispatch) => {\n    e.preventDefault();\n    const newState = { ...this.state };\n\n    // check for errors\n    if (newState.name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (newState.email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (newState.phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const response = await axios.post(`http://jsonplaceholder.typicode.com/users`, newState);\n    dispatch({ type: 'ADD_CONTACT', payload: response.data });\n\n    // to clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // to redirect to home page\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className='card mb-3'>\n              <div className=\"card-header\">\n                Add Contact\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={(e) => this.onSubmit(e, value.dispatch)}>\n                  <TextInputGroup name='name' label='Name' placeholder='Enter name' value={name} onChange={this.onChange} error={errors.name} />\n                  <TextInputGroup name='email' label='Email' type='email' placeholder='Enter email' value={email} onChange={this.onChange} error={errors.email} />\n                  <TextInputGroup name='phone' label='Phone' placeholder='Enter phone' value={phone} onChange={this.onChange} error={errors.phone} />\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (e, dispatch) => {\n    e.preventDefault();\n    const newState = { ...this.state };\n\n    // check for errors\n    if (newState.name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (newState.email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (newState.phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const response = await axios.put(`http://jsonplaceholder.typicode.com/users/${newState.id}`, newState);\n    dispatch({ type: 'EDIT_CONTACT', payload: response.data });\n\n    // to clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // to redirect to home page\n    this.props.history.push('/');\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const response = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\n    this.setState(response.data);\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className='card mb-3'>\n              <div className=\"card-header\">\n                Edit Contact\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={(e) => this.onSubmit(e, value.dispatch)}>\n                  <TextInputGroup name='name' label='Name' placeholder='Enter name' value={name} onChange={this.onChange} error={errors.name} />\n                  <TextInputGroup name='email' label='Email' type='email' placeholder='Enter email' value={email} onChange={this.onChange} error={errors.email} />\n                  <TextInputGroup name='phone' label='Phone' placeholder='Enter phone' value={phone} onChange={this.onChange} error={errors.phone} />\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nconst About = (props) => {\n  return (\n    <div>\n      {/* if needed to access param from url {props.match.params.id} */}\n      <h1 className=\"display-4\">About Contact manager</h1>\n      <p className='lead'>Simple app to manage contacts</p>\n      <p className=\"text-secondary\">v1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page - Not Found</h1>\n      <p className=\"lead\">Sorry! That page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\n      <div className='container'>\n        <Link to='/' className='navbar-brand'>{branding}</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faHome} /> Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/contact/add\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faPlus} /> Add contact</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/about\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faQuestion} /> About</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// Default props\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\n// Prop Type validation\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\n// // Styling\n// const headingStyle = {\n//   color: 'red',\n//   fontSize: '50px'\n// }\nexport default Header;","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(json => this.setState({ title: json.title, body: json.body }));\n  };\n\n  // componentWillMount = () => {\n  //   console.log('component will mount');\n  // };\n\n  // componentDidUpdate = () => {\n  //   console.log('component did update');\n  // };\n\n  // componentWillUpdate = () => {\n  //   console.log('component will update');\n  // };\n\n  // // will be deprecated\n  // UNSAFE_componentWillReceiveProps = (nextProps, nextState) => {\n  //   console.log('component will receive props');\n  // };\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   // valid state or null should be returned here;\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('Get snapshot before update');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Header from './components/layout/Header';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\n// adding bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\" >\n            <Header branding='Contact Manager' />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}